function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples
n = size(theta); %number of features

% You need to return the following variables correctly 
J = 0;
grad = zeros(n);

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

for i=1:m
    h_x = sigmoid(X(i,:)*theta);
    J += y(i)*log(h_x) + (1-y(i))*log(1-h_x);
end

J = (J / m) * -1;

regFactor = (sum(theta.^2) * lambda) / (2*m);
J += regFactor;

for h = 1:n
    for i = 1:m
        h_x = sigmoid(X(i,:)*theta);
        grad(h) += (h_x - y(i)) * X(i,h);        
    end
    grad(h) =  (grad(h) / m);
    if(h != 1)
        grad(h) += (theta(h)*lambda) / m;
    endif
end






% =============================================================

end
